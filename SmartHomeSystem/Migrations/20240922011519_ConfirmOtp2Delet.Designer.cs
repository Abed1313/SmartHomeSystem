// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartHomeSystem.Data;

#nullable disable

namespace SmartHomeSystem.Migrations
{
    [DbContext(typeof(SmartHomeDbContext))]
    [Migration("20240922011519_ConfirmOtp2Delet")]
    partial class ConfirmOtp2Delet
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "admin",
                            ConcurrencyStamp = "00000000-0000-0000-0000-000000000000",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "guest",
                            ConcurrencyStamp = "00000000-0000-0000-0000-000000000000",
                            Name = "Guest",
                            NormalizedName = "GUEST"
                        },
                        new
                        {
                            Id = "provider",
                            ConcurrencyStamp = "00000000-0000-0000-0000-000000000000",
                            Name = "Provider",
                            NormalizedName = "PROVIDER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1098126104,
                            ClaimType = "permission",
                            ClaimValue = "update",
                            RoleId = "admin"
                        },
                        new
                        {
                            Id = -1652053595,
                            ClaimType = "permission",
                            ClaimValue = "read",
                            RoleId = "admin"
                        },
                        new
                        {
                            Id = 1324152588,
                            ClaimType = "permission",
                            ClaimValue = "delete",
                            RoleId = "admin"
                        },
                        new
                        {
                            Id = -813727211,
                            ClaimType = "permission",
                            ClaimValue = "create",
                            RoleId = "admin"
                        },
                        new
                        {
                            Id = 1606858015,
                            ClaimType = "permission",
                            ClaimValue = "read",
                            RoleId = "guest"
                        },
                        new
                        {
                            Id = -1056832207,
                            ClaimType = "permission",
                            ClaimValue = "update",
                            RoleId = "provider"
                        },
                        new
                        {
                            Id = -1779305417,
                            ClaimType = "permission",
                            ClaimValue = "read",
                            RoleId = "provider"
                        },
                        new
                        {
                            Id = 1248525400,
                            ClaimType = "permission",
                            ClaimValue = "delete",
                            RoleId = "provider"
                        },
                        new
                        {
                            Id = -197769108,
                            ClaimType = "permission",
                            ClaimValue = "create",
                            RoleId = "provider"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SmartHomeSystem.Models.AccessControl", b =>
                {
                    b.Property<int>("AccessControlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessControlId"));

                    b.Property<int>("AccessLevelId")
                        .HasColumnType("int");

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<int>("HouseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("AccessControlId");

                    b.HasIndex("AccessLevelId");

                    b.HasIndex("AdminId");

                    b.HasIndex("GuestId");

                    b.HasIndex("HouseId");

                    b.ToTable("AccessControls");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.AccessLevel", b =>
                {
                    b.Property<int>("AccessLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessLevelId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccessLevelId");

                    b.ToTable("AccessLevels");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.ActionSeverity", b =>
                {
                    b.Property<int>("ActionSeverityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActionSeverityId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActionSeverityId");

                    b.ToTable("ActionSeverities");

                    b.HasData(
                        new
                        {
                            ActionSeverityId = 1,
                            Description = "Informational alerts that do not require immediate attention.",
                            Name = "Info"
                        },
                        new
                        {
                            ActionSeverityId = 2,
                            Description = "Alerts that require attention but are not critical.",
                            Name = "Warning"
                        },
                        new
                        {
                            ActionSeverityId = 3,
                            Description = "Critical alerts that require immediate attention.",
                            Name = "Critical"
                        });
                });

            modelBuilder.Entity("SmartHomeSystem.Models.ActionType", b =>
                {
                    b.Property<int>("ActionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActionTypeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parameters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActionTypeId");

                    b.ToTable("ActionTypes");

                    b.HasData(
                        new
                        {
                            ActionTypeId = 1,
                            Name = "TurnOn",
                            Parameters = "None"
                        },
                        new
                        {
                            ActionTypeId = 2,
                            Name = "TurnOff",
                            Parameters = "None"
                        },
                        new
                        {
                            ActionTypeId = 3,
                            Name = "SetTemperature",
                            Parameters = "75°F"
                        },
                        new
                        {
                            ActionTypeId = 4,
                            Name = "SetBrightness",
                            Parameters = "50% Brightness"
                        });
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("CharactersId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminId");

                    b.HasIndex("CharactersId")
                        .IsUnique();

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Alert", b =>
                {
                    b.Property<int>("AlertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlertId"));

                    b.Property<int>("ActionSeverityId")
                        .HasColumnType("int");

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("AlertId");

                    b.HasIndex("ActionSeverityId");

                    b.HasIndex("AdminId");

                    b.HasIndex("DeviceId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Alerts");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.AutomationRule", b =>
                {
                    b.Property<int>("AutomationRuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AutomationRuleId"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trigger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AutomationRuleId");

                    b.HasIndex("AdminId");

                    b.ToTable("AutomationRules");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Characters", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Device", b =>
                {
                    b.Property<int>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeviceId"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<int>("DeviceTypeId")
                        .HasColumnType("int");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCommunicationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("imageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeviceId");

                    b.HasIndex("AdminId");

                    b.HasIndex("DeviceTypeId");

                    b.HasIndex("GuestId");

                    b.HasIndex("ProviderId");

                    b.HasIndex("RoomId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.DeviceType", b =>
                {
                    b.Property<int>("DeviceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeviceTypeId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeviceTypeId");

                    b.ToTable("DeviceTypes");

                    b.HasData(
                        new
                        {
                            DeviceTypeId = 1,
                            Description = "A smart light bulb that can be controlled remotely.",
                            Name = "Light"
                        },
                        new
                        {
                            DeviceTypeId = 2,
                            Description = "A smart thermostat that controls the temperature of the house.",
                            Name = "Thermostat"
                        },
                        new
                        {
                            DeviceTypeId = 3,
                            Description = "A camera that provides remote monitoring of the house.",
                            Name = "Security Camera"
                        },
                        new
                        {
                            DeviceTypeId = 4,
                            Description = "A smart plug that can be controlled to turn on or off connected devices.",
                            Name = "Smart Plug"
                        });
                });

            modelBuilder.Entity("SmartHomeSystem.Models.EnergyUsage", b =>
                {
                    b.Property<int>("EnergyUsageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnergyUsageId"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<float>("EnergyConsumed")
                        .HasColumnType("real");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("EnergyUsageId");

                    b.HasIndex("AdminId");

                    b.HasIndex("DeviceId");

                    b.HasIndex("ProviderId");

                    b.ToTable("EnergyUsages");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Guest", b =>
                {
                    b.Property<int>("GuestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GuestId"));

                    b.Property<string>("CharactersId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GuestId");

                    b.HasIndex("CharactersId")
                        .IsUnique();

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.House", b =>
                {
                    b.Property<int>("HouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HouseId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<string>("imageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HouseId");

                    b.HasIndex("AdminId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Houses");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.LogEntry", b =>
                {
                    b.Property<int>("LogEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogEntryId"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ActionTypeId")
                        .HasColumnType("int");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("LogEntryId");

                    b.HasIndex("ActionTypeId");

                    b.HasIndex("DeviceId");

                    b.ToTable("LogEntries");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("NotificationId");

                    b.HasIndex("AdminId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Provider", b =>
                {
                    b.Property<int>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProviderId"));

                    b.Property<string>("CharactersId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProviderId");

                    b.HasIndex("CharactersId")
                        .IsUnique();

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<int>("HouseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<string>("imageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomId");

                    b.HasIndex("AdminId");

                    b.HasIndex("HouseId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.RoomType", b =>
                {
                    b.Property<int>("RoomTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomTypeId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomTypeId");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            RoomTypeId = 1,
                            Description = "A room in a house for general and informal everyday use.",
                            Name = "Living Room"
                        },
                        new
                        {
                            RoomTypeId = 2,
                            Description = "A room where food is prepared and cooked.",
                            Name = "Kitchen"
                        },
                        new
                        {
                            RoomTypeId = 3,
                            Description = "A room used for sleeping.",
                            Name = "Bedroom"
                        },
                        new
                        {
                            RoomTypeId = 4,
                            Description = "A room containing a bathtub or shower, and usually a toilet.",
                            Name = "Bathroom"
                        },
                        new
                        {
                            RoomTypeId = 5,
                            Description = "A room for housing a vehicle or storage.",
                            Name = "Garage"
                        });
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Scene", b =>
                {
                    b.Property<int>("SceneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SceneId"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SceneId");

                    b.HasIndex("AdminId");

                    b.HasIndex("GuestId");

                    b.ToTable("Scenes");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.SceneAction", b =>
                {
                    b.Property<int>("SceneActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SceneActionId"));

                    b.Property<int>("ActionTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("int");

                    b.Property<int>("SceneId")
                        .HasColumnType("int");

                    b.HasKey("SceneActionId");

                    b.HasIndex("ActionTypeId");

                    b.HasIndex("DeviceId");

                    b.HasIndex("SceneId");

                    b.ToTable("SceneActions");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.SecuritySystem", b =>
                {
                    b.Property<int>("SecuritySystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SecuritySystemId"));

                    b.Property<int>("HouseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsArmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastArmedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastDisarmedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("SecuritySystemId");

                    b.HasIndex("HouseId");

                    b.ToTable("SecuritySystems");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.SubscriptionPlan", b =>
                {
                    b.Property<int>("SubscriptionPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriptionPlanId"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MonthlyCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.HasKey("SubscriptionPlanId");

                    b.HasIndex("AdminId");

                    b.HasIndex("ProviderId");

                    b.ToTable("SubscriptionPlans");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.UserSubscription", b =>
                {
                    b.Property<int>("UserSubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserSubscriptionId"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubscriptionPlanId")
                        .HasColumnType("int");

                    b.HasKey("UserSubscriptionId");

                    b.HasIndex("AdminId");

                    b.HasIndex("SubscriptionPlanId");

                    b.ToTable("UserSubscriptions");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.Characters", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.Characters", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartHomeSystem.Models.Characters", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.Characters", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartHomeSystem.Models.AccessControl", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.AccessLevel", "AccessLevel")
                        .WithMany("AccessControl")
                        .HasForeignKey("AccessLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartHomeSystem.Models.Admin", "Admin")
                        .WithMany("AllowedAccessControls")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartHomeSystem.Models.Guest", "Guest")
                        .WithMany("AllowedAccessControls")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartHomeSystem.Models.House", "House")
                        .WithMany("AccessControls")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AccessLevel");

                    b.Navigation("Admin");

                    b.Navigation("Guest");

                    b.Navigation("House");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Admin", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.Characters", "Characters")
                        .WithOne("Admin")
                        .HasForeignKey("SmartHomeSystem.Models.Admin", "CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Characters");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Alert", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.ActionSeverity", "ActionSeverity")
                        .WithMany("Alerts")
                        .HasForeignKey("ActionSeverityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartHomeSystem.Models.Admin", "Admin")
                        .WithMany("ManagedAlerts")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartHomeSystem.Models.Device", null)
                        .WithMany("Alerts")
                        .HasForeignKey("DeviceId");

                    b.HasOne("SmartHomeSystem.Models.Provider", "Provider")
                        .WithMany("ManagedAlerts")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ActionSeverity");

                    b.Navigation("Admin");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.AutomationRule", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.Admin", "Admin")
                        .WithMany("AutomationRules")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Device", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.Admin", "Admin")
                        .WithMany("ManagedDevices")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartHomeSystem.Models.DeviceType", "DeviceType")
                        .WithMany("Devices")
                        .HasForeignKey("DeviceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartHomeSystem.Models.Guest", "Guest")
                        .WithMany("AccessibleDevices")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartHomeSystem.Models.Provider", "Provider")
                        .WithMany("ManagedDevices")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartHomeSystem.Models.Room", "Room")
                        .WithMany("Devices")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("DeviceType");

                    b.Navigation("Guest");

                    b.Navigation("Provider");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.EnergyUsage", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.Admin", "Admin")
                        .WithMany("ManagedEnergyUsages")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartHomeSystem.Models.Device", "Device")
                        .WithMany("EnergyUsages")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartHomeSystem.Models.Provider", "Provider")
                        .WithMany("ManagedEnergyUsages")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Device");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Guest", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.Characters", "User")
                        .WithOne("Guest")
                        .HasForeignKey("SmartHomeSystem.Models.Guest", "CharactersId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.House", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.Admin", "Admin")
                        .WithMany("ManagedHouses")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartHomeSystem.Models.Provider", "Provider")
                        .WithMany("ManagedHouses")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.LogEntry", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.ActionType", "ActionType")
                        .WithMany("LogEntries")
                        .HasForeignKey("ActionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartHomeSystem.Models.Device", "Device")
                        .WithMany("LogEntries")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionType");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Notification", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.Admin", "Admin")
                        .WithMany("Notification")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Provider", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.Characters", "User")
                        .WithOne("Provider")
                        .HasForeignKey("SmartHomeSystem.Models.Provider", "CharactersId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Room", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.Admin", "Admin")
                        .WithMany("Rooms")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartHomeSystem.Models.House", "House")
                        .WithMany("Rooms")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartHomeSystem.Models.RoomType", "RoomType")
                        .WithMany("Room")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("House");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Scene", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.Admin", "Admin")
                        .WithMany("AccessibleScenes")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SmartHomeSystem.Models.Guest", "Guest")
                        .WithMany("AccessibleScenes")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.SceneAction", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.ActionType", "ActionType")
                        .WithMany("SceneActions")
                        .HasForeignKey("ActionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartHomeSystem.Models.Device", null)
                        .WithMany("SceneActions")
                        .HasForeignKey("DeviceId");

                    b.HasOne("SmartHomeSystem.Models.Scene", "Scene")
                        .WithMany("SceneActions")
                        .HasForeignKey("SceneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionType");

                    b.Navigation("Scene");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.SecuritySystem", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.House", "House")
                        .WithMany()
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("House");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.SubscriptionPlan", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.Admin", "Admin")
                        .WithMany("ManagedSubscriptionPlans")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartHomeSystem.Models.Provider", "Provider")
                        .WithMany("ManagedSubscriptionPlans")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.UserSubscription", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.Admin", "Admin")
                        .WithMany("UserSubscriptions")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartHomeSystem.Models.SubscriptionPlan", "SubscriptionPlan")
                        .WithMany("UserSubscriptions")
                        .HasForeignKey("SubscriptionPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("SubscriptionPlan");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.AccessLevel", b =>
                {
                    b.Navigation("AccessControl");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.ActionSeverity", b =>
                {
                    b.Navigation("Alerts");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.ActionType", b =>
                {
                    b.Navigation("LogEntries");

                    b.Navigation("SceneActions");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Admin", b =>
                {
                    b.Navigation("AccessibleScenes");

                    b.Navigation("AllowedAccessControls");

                    b.Navigation("AutomationRules");

                    b.Navigation("ManagedAlerts");

                    b.Navigation("ManagedDevices");

                    b.Navigation("ManagedEnergyUsages");

                    b.Navigation("ManagedHouses");

                    b.Navigation("ManagedSubscriptionPlans");

                    b.Navigation("Notification");

                    b.Navigation("Rooms");

                    b.Navigation("UserSubscriptions");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Characters", b =>
                {
                    b.Navigation("Admin")
                        .IsRequired();

                    b.Navigation("Guest")
                        .IsRequired();

                    b.Navigation("Provider")
                        .IsRequired();
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Device", b =>
                {
                    b.Navigation("Alerts");

                    b.Navigation("EnergyUsages");

                    b.Navigation("LogEntries");

                    b.Navigation("SceneActions");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.DeviceType", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Guest", b =>
                {
                    b.Navigation("AccessibleDevices");

                    b.Navigation("AccessibleScenes");

                    b.Navigation("AllowedAccessControls");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.House", b =>
                {
                    b.Navigation("AccessControls");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Provider", b =>
                {
                    b.Navigation("ManagedAlerts");

                    b.Navigation("ManagedDevices");

                    b.Navigation("ManagedEnergyUsages");

                    b.Navigation("ManagedHouses");

                    b.Navigation("ManagedSubscriptionPlans");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Room", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.RoomType", b =>
                {
                    b.Navigation("Room");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Scene", b =>
                {
                    b.Navigation("SceneActions");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.SubscriptionPlan", b =>
                {
                    b.Navigation("UserSubscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
